# HG changeset patch
# Parent  af95b352f0be4eb2e337867450f25f4c2456a47f

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -6202,27 +6202,29 @@ if test -n "$LIBJPEG_TURBO_X86_ASM" -o -
         if test "$_YASM_MAJOR_VERSION" -lt "1" -o \( "$_YASM_MAJOR_VERSION" -eq "1" -a "$_YASM_MINOR_VERSION" -lt "1" \) ; then
             AC_MSG_ERROR([Yasm 1.1 or greater is required to build with libjpeg-turbo's optimized JPEG decoding routines, but you appear to have version $_YASM_MAJOR_VERSION.$_YASM_MINOR_VERSION.  Upgrade to the newest version or configure with --disable-libjpeg-turbo to use the pure C JPEG decoder.  See https://developer.mozilla.org/en/YASM for more details.])
         fi
     fi
 fi
 
 dnl If we're on an ARM system which supports libjpeg-turbo's asm routines and
 dnl --disable-libjpeg-turbo wasn't passed, use the C compiler as the assembler.
-if test -n "$LIBJPEG_TURBO_ARM_ASM" ; then
+if test -n "$LIBJPEG_TURBO_ARM_ASM" -o -n "$LIBJPEG_TURBO_ARM64_ASM" ; then
     echo "Using $AS as the assembler for ARM code."
     LIBJPEG_TURBO_AS=$AS
 fi
 
 if test -n "$LIBJPEG_TURBO_X86_ASM"; then
     AC_DEFINE(LIBJPEG_TURBO_X86_ASM)
 elif test -n "$LIBJPEG_TURBO_X64_ASM"; then
     AC_DEFINE(LIBJPEG_TURBO_X64_ASM)
 elif test -n "$LIBJPEG_TURBO_ARM_ASM"; then
     AC_DEFINE(LIBJPEG_TURBO_ARM_ASM)
+elif test -n "$LIBJPEG_TURBO_ARM64_ASM"; then
+    AC_DEFINE(LIBJPEG_TURBO_ARM64_ASM)
 elif test -n "$MOZ_LIBJPEG_TURBO"; then
     dnl Warn if we're not building the optimized routines, even though the user
     dnl didn't specify --disable-libjpeg-turbo.
     AC_MSG_WARN([No assembler or assembly support for libjpeg-turbo.  Using unoptimized C routines.])
 fi
 
 dnl ========================================================
 dnl = Enable compilation of specific extension modules
