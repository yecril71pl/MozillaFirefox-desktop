# HG changeset patch
# User Wolfgang Rosenauer <wr@rosenauer.org>
# Parent  5f8b5e8163ece92dc819896dd52b9dbf5f524fe3

diff --git a/media/libstagefright/binding/include/mp4_demuxer/ByteWriter.h b/media/libstagefright/binding/include/mp4_demuxer/ByteWriter.h
--- a/media/libstagefright/binding/include/mp4_demuxer/ByteWriter.h
+++ b/media/libstagefright/binding/include/mp4_demuxer/ByteWriter.h
@@ -19,57 +19,64 @@ public:
   {
   }
   ~ByteWriter()
   {
   }
 
   void WriteU8(uint8_t aByte)
   {
-    mPtr.append(aByte);
+    bool rv;
+    rv = mPtr.append(aByte);
   }
 
   void WriteU16(uint16_t aShort)
   {
     uint8_t c[2];
+    bool rv;
     mozilla::BigEndian::writeUint16(&c[0], aShort);
-    mPtr.append(&c[0], 2);
+    rv = mPtr.append(&c[0], 2);
   }
 
   void WriteU32(uint32_t aLong)
   {
     uint8_t c[4];
+    bool rv;
     mozilla::BigEndian::writeUint32(&c[0], aLong);
-    mPtr.append(&c[0], 4);
+    rv = mPtr.append(&c[0], 4);
   }
 
   void Write32(int32_t aLong)
   {
     uint8_t c[4];
+    bool rv;
     mozilla::BigEndian::writeInt32(&c[0], aLong);
-    mPtr.append(&c[0], 4);
+    rv = mPtr.append(&c[0], 4);
   }
 
   void WriteU64(uint64_t aLongLong)
   {
     uint8_t c[8];
+    bool rv;
     mozilla::BigEndian::writeUint64(&c[0], aLongLong);
-    mPtr.append(&c[0], 8);
+    rv = mPtr.append(&c[0], 8);
   }
 
   void Write64(int64_t aLongLong)
   {
     uint8_t c[8];
+    bool rv;
     mozilla::BigEndian::writeInt64(&c[0], aLongLong);
-    mPtr.append(&c[0], 8);
+    rv = mPtr.append(&c[0], 8);
   }
 
   void Write(const uint8_t* aSrc, size_t aCount)
   {
-    mPtr.append(aSrc, aCount);
+    bool rv;
+    rv = mPtr.append(aSrc, aCount);
   }
 
 private:
   mozilla::Vector<uint8_t>& mPtr;
 };
 }
 
 #endif
